<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.paipianwang.pat.facade.finance.service.dao.impl.PmsUserInvoiceDaoImpl">

	<!-- 产品信息表 -->
	<sql id="user_invoice"> USER_INVOICE </sql>
	<sql id="view_project_flow_relation"> INDENT_PROJECT_RELATION_VIEW </sql>
	<sql id="users"> USERS </sql>
	<sql id="employee"> EMPLOYEE </sql>
	
	<sql id="sql_condition">
		<if test="invoiceType != null and invoiceType !=0 ">
			AND i.INVOICE_TYPE = ${invoiceType}
		</if>
		
		<if test="invoiceCode != null and invoiceCode != '' ">
			AND i.INVOICE_CODE LIKE CONCAT('%',#{invoiceCode},'%')
		</if>
		
		<if test="invoiceProjectId != null ">
			AND i.invoice_projectId = ${invoiceProjectId}
		</if>
		<if test="invoiceBeginDate != null and invoiceBeginDate != '' ">
			<![CDATA[
				AND DATE_FORMAT(INVOICE_STAMPTIME,'%Y-%m-%d') >= #{invoiceBeginDate}
			]]>
		</if>
		<if test="invoiceEndDate != null  and invoiceEndDate != ''">
			<![CDATA[
				AND DATE_FORMAT(INVOICE_STAMPTIME,'%Y-%m-%d') <= #{invoiceEndDate}
			]]>
		</if>
	</sql>
	
	<select id="listPage" resultType="PmsUserInvoice">
		SELECT i.INVOICE_ID AS invoiceId,
		   i.INVOICE_CODE AS invoiceCode,
		   i.INVOICE_TYPE AS invoiceType,
		   i.INVOICE_CONTENT AS invoiceContent,
		   FORMAT(i.INVOICE_TOTAL,2) AS invoiceTotal,
		   i.INVOICE_RADIO AS invoiceRadio,
		   DATE_FORMAT(i.INVOICE_STAMPTIME,'%Y-%m-%d')AS invoiceStampTime,
		   DATE_FORMAT( i.INVOICE_RECEIVETIME,'%Y-%m-%d') AS invoiceReceiveTime,
		   i.INVOICE_USERID AS invoiceUserId,
		   i.INVOICE_PROJECTID AS invoiceProjectId,
		   i.INVOICE_EMPLOYEEID AS invoiceEmployeeId,
		   i.INVOICE_NOTICE AS invoiceNotice,
		   i.INVOICE_STATUS AS invoiceStatus,
		   i.REASON AS reason,
		   p.PROJECTNAME AS projectName,
		   u.USERNAME AS userName,
		   e.employeeRealName AS invoiceEmployeeName
		FROM 
		<include refid="user_invoice" />  i
		INNER JOIN 
		<include refid="view_project_flow_relation" />  p
			ON i.INVOICE_PROJECTID = p.projectId
		LEFT JOIN 
		<include refid="users" /> u
			ON i.INVOICE_USERID = u.ID
		LEFT JOIN 
		<include refid="employee" /> e
			 ON i.invoice_employeeId = e.employeeId
		<where>
			<include refid="sql_condition" />
		</where>	
		ORDER BY
			<if test="sort != null and sort != '' and order != null and order != ''">
				 ${sort} ${order},
			</if>
				 i.INVOICE_RECEIVETIME DESC
				LIMIT ${begin} , ${limit}
	</select>
	
	<select id="listPageCount" resultType="Long">
		SELECT COUNT(1)
			FROM 
		<include refid="user_invoice" />  i
		INNER JOIN 
		<include refid="view_project_flow_relation" />  p
			ON i.INVOICE_PROJECTID = p.projectId
		LEFT JOIN 
		<include refid="users" /> u
			ON i.INVOICE_USERID = u.ID
		LEFT JOIN 
		<include refid="employee" /> e
			 ON i.invoice_employeeId = e.employeeId
		<where>
			<include refid="sql_condition" />
		</where>
	</select>
	
	<select id="listBy" resultType="PmsUserInvoice">
		SELECT i.INVOICE_ID AS invoiceId,
		   i.INVOICE_CODE AS invoiceCode,
		   i.INVOICE_TYPE AS invoiceType,
		   i.INVOICE_CONTENT AS invoiceContent,
		   FORMAT(i.INVOICE_TOTAL,2) AS invoiceTotal,
		   i.INVOICE_RADIO AS invoiceRadio,
		   DATE_FORMAT(i.INVOICE_STAMPTIME,'%Y-%m-%d')AS invoiceStampTime,
		   DATE_FORMAT( i.INVOICE_RECEIVETIME,'%Y-%m-%d') AS invoiceReceiveTime,
		   i.INVOICE_USERID AS invoiceUserId,
		   i.INVOICE_PROJECTID AS invoiceProjectId,
		   i.INVOICE_EMPLOYEEID AS invoiceEmployeeId,
		   i.INVOICE_NOTICE AS invoiceNotice,
		   i.INVOICE_STATUS AS invoiceStatus,
		   i.REASON AS reason,
		   p.PROJECTNAME AS projectName,
		   u.USERNAME AS userName,
		   e.employeeRealName AS invoiceEmployeeName
		FROM  <include refid="user_invoice" />  i
		INNER JOIN  <include refid="view_project_flow_relation" />  p
			ON i.INVOICE_PROJECTID = p.projectId
		LEFT JOIN <include refid="users" /> u
			ON i.INVOICE_USERID = u.ID
		LEFT JOIN 
		<include refid="employee" /> e
			 ON i.invoice_employeeId = e.employeeId
		<where>
			<include refid="sql_condition" />
		</where>	
	</select>
	
	<update id="update">
			UPDATE 
			<include refid="user_invoice" />
			<set>
				INVOICE_CODE = #{invoiceCode},
				INVOICE_TYPE = ${invoiceType},
				INVOICE_CONTENT = #{invoiceContent},
				INVOICE_TOTAL = ${invoiceTotal},
				INVOICE_RADIO = #{invoiceRadio},
				INVOICE_STAMPTIME = DATE_FORMAT(#{invoiceStampTime},'%Y-%m-%d'),
				INVOICE_RECEIVETIME = DATE_FORMAT(#{invoiceReceiveTime},'%Y-%m-%d'),
				INVOICE_USERID = ${invoiceUserId},
				INVOICE_PROJECTID = ${invoiceProjectId},
				INVOICE_EMPLOYEEID = ${invoiceEmployeeId},
				INVOICE_NOTICE = #{invoiceNotice},
				INVOICE_STATUS = #{invoiceStatus}
			</set> 
			<where>
				INVOICE_ID = ${invoiceId}
			</where>
	</update>
	
	<insert id="save" useGeneratedKeys="true" keyProperty="invoiceId"
		parameterType="PmsUserInvoice">
		<![CDATA[
			INSERT INTO USER_INVOICE(INVOICE_CODE,
			   INVOICE_TYPE,
			   INVOICE_CONTENT,
			   INVOICE_TOTAL,
			   INVOICE_RADIO,
			   INVOICE_STAMPTIME,
			   INVOICE_RECEIVETIME,
			   INVOICE_USERID,
			   INVOICE_PROJECTID,
			   INVOICE_EMPLOYEEID,
			   INVOICE_NOTICE,
			   INVOICE_STATUS
			  )
			VALUES (
			#{invoiceCode},
			#{invoiceType},
			#{invoiceContent},
			${invoiceTotal},
			#{invoiceRadio},
			DATE_FORMAT(#{invoiceStampTime},'%Y-%m-%d'),
			DATE_FORMAT(#{invoiceReceiveTime},'%Y-%m-%d'),
			${invoiceUserId},
			${invoiceProjectId},
			${invoiceEmployeeId},
			#{invoiceNotice},
			#{invoiceStatus}
			)
		]]>
	</insert>
	<update id="agreeInvoiceByIds">
			UPDATE <include refid="user_invoice" />
			<set>
				INVOICE_STATUS = 1,
				REASON = ''
			</set>
			<where>
				INVOICE_ID = -1
			</where>
		<if test="array != null and array != ''">
				OR INVOICE_ID IN
			<foreach collection="array" open="(" close=")" item="item"
				separator=",">
				#{item}
			</foreach>
		</if>
	</update>
	
	
	<update id="disagreeInvoice">
		UPDATE 
		<include refid="user_invoice" />
		<set>
			INVOICE_STATUS = 2,
			REASON = #{reason}
		</set>
		<where>
			INVOICE_ID = ${invoiceId}
		</where>
	</update>
	<delete id="deleteByIds">
			DELETE FROM 
			<include refid="user_invoice" />
			<where>
				INVOICE_ID = -1
				<if test="ids != null and ids != ''">
				OR INVOICE_ID IN
			<foreach collection="ids" open="(" close=")" item="item"
				separator=",">
				#{item}
			</foreach>
		</if>
			</where>
		
	</delete>
</mapper>